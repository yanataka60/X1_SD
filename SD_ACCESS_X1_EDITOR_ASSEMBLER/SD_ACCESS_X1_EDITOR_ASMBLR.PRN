			  Z80 ASSEMBLER - ZASM VER 1.6
  0003                	INPUTF		EQU		0003H	;１行入力
  000B                	PRINT		EQU		000BH	;文字列のプリント
  0013                	ACCPRT		EQU		0013H	;１文字出力
  001B                	INKEY$		EQU		001BH	;１文字入力
  0023                	TAK49S		EQU		0023H	;サブCPU80C49との通信
  002B                	PCG			EQU		002BH	;PCGのセット
  0033                	CGREAD		EQU		0033H	;PCGの内容を読む
  003B                	SAVE1		EQU		003BH	;FCBをCMTにセーブ
  003E                	SAVE2		EQU		003EH	;データをCMTにセーブ
  0041                	LOAD1		EQU		0041H	;FCBをCMTからロード
  0044                	LOAD2		EQU		0044H	;CMTからデータをロード
  0047                	VERFY2		EQU		0047H	;CMTのデータとメイン・メモリのデータを比較
  004A                	BRKCHK		EQU		004AH	;SHIFT+BREAK CHECK
  004D                	WIDTH48		EQU		004DH	;Aレジスタの値により40文字、80文字モードを指定
  012D                	KVECIN		EQU		012DH	;キーボード通信?
  0133                	KVEC00		EQU		0133H	;80C49にキー入力割込みベクトルの下位を伝達
  013C                	PSGINT		EQU		013CH	;PSGの出力を止める
  015A                	BINPUT		EQU		015AH	;１行入力 BASIC用
  0346                	INTKEY		EQU		0346H	;割込みキー入力の実行
  04A3                	CR2			EQU		04A3H	;行の先頭でないなら改行
  04A7                	CR1			EQU		04A7H	;改行
  04AB                	TABPRT		EQU		04ABH	;X座標が10の倍数までスペース出力
  04BA                	SPPRT		EQU		04BAH	;スペース出力
  04C8                	ACCDIS		EQU		04C8H	;１文字出力 コントロール・コード表示版
  054A                	ADRCAL		EQU		054AH	;現在カーソル位置のテキストVRAMのアドレス計算
  054D                	ADRCA2		EQU		054DH	;HLレジスタで示したテキスト座病のテキストVRAMのアドレス計算
  0577                	CTRLJB		EQU		0577H	;コントロール・コード処理
  07F7                	BEEP		EQU		07F7H	;ベル音を鳴らす
  098C                	WIDTH80		EQU		098CH	;WIDTH80
  0998                	WIDTH40		EQU		0998H	;WIDTH40
  09C0                	SCRNOT		EQU		09C0H	;表示画面のページ指定
  09F5                	SCRNIN		EQU		09F5H	;書き込み画面のページ指定
  0A3F                	CTRLDQ		EQU		0A3FH	;コンソールと入出力ページの初期化
  0A5A                	STPRIO		EQU		0A5AH	;パレット、プライオリティ・セット
  0A6B                	CLST		EQU		0A6BH	;テキスト・クリア
  0A8A                	STCLSG		EQU		0A8AH	;グラフィック・クリア(SCRMODの値による)
  0A8F                	CLSG		EQU		0A8FH	;グラフィック・クリア(SCRMODの値によらない)
  0B49                	RECV49		EQU		0B49H	;サブCPU8049からデータを受信
  0B54                	TRANS49		EQU		0B54H	;サブCPU8049に送信要求コードを送る
  0B61                	OBFCK		EQU		0B61H	;80C49がデータを受け取れる状態になるまでウェイト
  0B6B                	IBFCK		EQU		0B6BH	;80C49からデータが送られてくるまでウェイト
  0C8A                	WBYTE		EQU		0C8AH	;CMT 1Byte Write
  0CAA                	RBYTE		EQU		0CAAH	;CMT 1byte Read
  0CD6                	CLRSUM		EQU		0CD6H	;チェックサムバッファのクリア
  0CDF                	GAP			EQU		0CDFH	;CMTへリーダー音の書込み
  0D20                	TMARK		EQU		0D20H	;CMTのリーダー音待ち
  0D8A                	SHORT		EQU		0D8AH	;CMTへ1ビット(0)書き込み
  0DA4                	LONG		EQU		0DA4H	;CMTへ1ビット(1)書き込み
  0DC7                	MOTOR		EQU		0DC7H	;CMT読み書き開始
  0DEC                	CMTCOM		EQU		0DECH	;CMTに対しコマンドを実行
  0DF6                	CMTSNS		EQU		0DF6H	;CMTの状態を示す
  0DFE                	COMOUT		EQU		0DFEH	;サブCPU80C49へコマンド送信
  0E77                	PSGSET		EQU		0E77H	;HLで始まる8バイトのデータをPSGにセット
  0FE2                	MONOP		EQU		0FE2H	;モニタコールドスタート
  1003                	HOTSTA		EQU		1003H	;モニタホットスタート
  111F                	HLSET		EQU		111FH	;バッファ上の文字を16進数に変換してHLレジスタにセット
  1143                	HEXCHL		EQU		1143H	;DEで示すアドレスの文字を16進数に変換してAレジスタにセット
  115E                	ACSET		EQU		115EH	;バッファ上の文字を16進数に変換してAレジスタにセット
  11AF                	DUMP		EQU		11AFH	;HLで示すアドレスからCバイトメモリダンプ
  1202                	HLHXPR		EQU		1202H	;HLレジスタの値を16進数で出力
  1207                	ACHXPR		EQU		1207H	;Aレジスタの値を16進数で出力
  12D5                	CR1LPL		EQU		12D5H	;LFのプリンタ出力
  12DC                	ACCLPL		EQU		12DCH	;プリンタへの1文字出力
  1315                	TABLPL		EQU		1315H	;HTABのプリンタ出力
  1321                	FNPRHL		EQU		1321H	;FCBのファイル・ネームをプリント
  134E                	FNMTCH		EQU		134EH	;ファイル・ネームとパスワードを比較
  1394                	SETDIQ		EQU		1394H	;FCBにファイルネームをセット
  1420                	ACCPRP		EQU		1420H	;画面またはプリンタへの1文字出力
  142F                	PRINTP		EQU		142FH	;文字列を画面またはプリンタに出力
  143C                	TABPRP		EQU		143CH	;HTABを画面またはプリンタに出力
  1446                	CR1PRP		EQU		1446H	;改行コードを画面またはプリンタに出力
  1451                	TUPPER		EQU		1451H	;大文字に変換
                      	
  0006                	LINLIM		EQU		0006H	;1行入力のバッファの長さのリミット R/W
  0007                	WIDTHO		EQU		0007H	;WIDTHの値 R
  000E                	CURX		EQU		000EH	;カーソルのX座標 R/W
  000F                	CURY		EQU		000FH	;カーソルのY座標 R/W
  0016                	CURYST		EQU		0016H	;テキスト表示エリアのY座標の先頭 R/W
  0017                	CURYED		EQU		0017H	;テキスト表示エリアのY座標の終わり R/W
  001E                	CURXST		EQU		001EH	;テキスト表示エリアのX座標の先頭 R/W
  001F                	CURXED		EQU		001FH	;テキスト表示エリアのX座標の終わり R/W
  0026                	COLORF		EQU		0026H	;カラーアトリビュートの値 R/W
  0027                	CLSCHR		EQU		0027H	;NULキャラクタ・コード R/W
  002E                	KEYDAT		EQU		002EH	;割込みキー入力で入ってきたキーコード(ASCII) R
                      				;EQU	002FH	;割込みキー入力で入ってきたキーコード(ファンクション・コード) R
  0036                	BRKBUF		EQU		0036H	;割込みキー入力によって入力されるBREAKおよびCTRL+Sを知らせるバッファ R
  0037                	KEYFLG		EQU		0037H	;有効なキーが割り込んだ時は0以外、無効なキーが割り込んだ時は0 R
  00E9                	INIADR		EQU		00E9H	;表示している画面のオフセット値 R
                      				;EQU	00EAH
  00EB                	INIADW		EQU		00EBH	;アクセスしている画面のオフセット値 R
                      				;EQU	00ECH
  00F6                	PRRIOF		EQU		00F6H	;青のパレット R
  00F7                	GPRIOF		EQU		00F7H	;赤のパレット R
  00F8                	BPRIOF		EQU		00F8H	;緑のパレット R
  00F9                	TPRIOF		EQU		00F9H	;テキストの優先順位 R
  0366                	REPTF1		EQU		0366H	;リピートON/OFF R/W
  0A8B                	SCRMOD		EQU		0A8BH	;グラフィックのクリア指定 R/W
  0E90                	CLICKF		EQU		0E90H	;クリック音の制御フラグ R/W
  0EA5                	KBUFSW		EQU		0EA5H	;1行入力時、先行入力を捨てるかどうかのフラグ R/W
  0EA6                	POINT1		EQU		0EA6H	;INBUF内の書き込みポインタ R/W
  0EA7                	POINT2		EQU		0EA7H	;INBUF内読み込みポインタ R/W
  0EA8                	INBUF		EQU		0EA8H	;～0EE7H 先行入力およびファンクション・キー入力のためのデータ・バッファ R/W
  0EF2                	TABBUF		EQU		0EF2H	;～0F41H 水平タブ設定バッファ
  0F42                	FUNBUF		EQU		0F42H	;～0FE1H ファンクション・キーが定義されているワーク R/W
  1472                	FILOUT		EQU		1472H	;プリンタ・モード R/W
  1480                	DIRIMG		EQU		1480H	;～149FH FCB R/W
                      	;IPLFCB		EQU		01480H	;CZ-8CB01
                      	;IPLFCB		EQU		0FF00H
                      	;FNAME		EQU		IPLFCB+1
                      	;FSIZE		EQU		IPLFCB+18
                      	;SADRS		EQU		IPLFCB+20
                      	;EXEAD		EQU		IPLFCB+22
  145A                	WRTMES		EQU		145AH	;CMT WRITNG MESSAGE R
  1462                	FINMES		EQU		1462H	;CMT FIND MESSAGE R
  146A                	SKPMES		EQU		146AH	;CMT SKIP MESSAGE R
                      	
                      	;07CH PORTA 送信データ(下位4ビット)
                      	;07DH PORTB 受信データ(8ビット)
                      	;
                      	;07EH PORTC Bit
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;07FH コントロールレジスタ
                      	
  4AA0                				ORG		4AA0H
                      	
  4AA0                	START:
  4AA0  21AE4A        				LD		HL,ENT0       ;SDアクセスルーチンをF800Hへ転送
  4AA3  1100F8        				LD		DE,ENT1
  4AA6  012004        				LD		BC,ENT6-ENT1
  4AA9  EDB0          				LDIR
  4AAB  C312F8        				JP		INIT
                      	
  4AAE                	ENT0:
  F800                				ORG		0F800H
  F800  C3B6F8        	ENT1:		JP		MSHED		;SAVE1	003BH	0B75H
  F803  C3E4F8        	ENT2:		JP		MSDAT		;SAVE2	003EH	0B79H
  F806  C31FF9        	ENT3:		JP		MLHED		;LOAD1	0041H	0B9AH
  F809  C3DEF9        	ENT4:		JP		MLDAT		;LOAD2	0044H	0B9EH
  F80C  C32AFA        	ENT5:		JP		MVRFY		;VERFY2	0047H	0BAEH
  F80F  C312F8        				JP		INIT
                      	
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  F812  3E8A          	INIT:		LD		A,8AH
  F814  017F00        				LD		BC,007FH
  F817  ED79          				OUT		(C),A
                      	;出力BITをリセット
  F819  3E00          	INIT2:		LD		A,00H      ;PORTA <- 0
  F81B  017C00        				LD		BC,007CH
  F81E  ED79          				OUT		(C),A
  F820  017E00        				LD		BC,007EH
  F823  ED79          				OUT		(C),A   ;PORTC <- 0
                      				
                      	
                      	;**** CMT関連ジャンプテーブル修正 ****
  F825  3EC3          				LD		A,0C3H
                      	
  F827  32750B        				LD		(0B75H),A
  F82A  21B6F8        				LD		HL,MSHED
  F82D  22760B        				LD		(0B75H+1),HL
                      	
  F830  32790B        				LD		(0B79H),A
  F833  21E4F8        				LD		HL,MSDAT
  F836  227A0B        				LD		(0B79H+1),HL
                      	
  F839  329A0B        				LD		(0B9AH),A
  F83C  211FF9        				LD		HL,MLHED
  F83F  229B0B        				LD		(0B9AH+1),HL
                      	
  F842  329E0B        				LD		(0B9EH),A
  F845  21DEF9        				LD		HL,MLDAT
  F848  229F0B        				LD		(0B9EH+1),HL
                      	
  F84B  32AE0B        				LD		(0BAEH),A
  F84E  212AFA        				LD		HL,MVRFY
  F851  22AF0B        				LD		(0BAEH+1),HL
                      	
  F854  C30000        				JP		0000H      ;EDITOR ASSEMBLER START
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  F857                	RCVBYTE:
  F857  C5            				PUSH	BC
  F858  CD75F8        				CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  F85B  017D00        				LD		BC,007DH
  F85E  ED78          				IN		A,(C)   ;PORTB -> A
  F860  F5            				PUSH 	AF
  F861  3E05          				LD		A,05H
  F863  017F00        				LD		BC,007FH
  F866  ED79          				OUT		(C),A    ;PORTC BIT2 <- 1
  F868  CD7FF8        				CALL	F2CHK      ;PORTC BIT7が0になるまでLOOP
  F86B  3E04          				LD		A,04H
  F86D  017F00        				LD		BC,007FH
  F870  ED79          				OUT		(C),A    ;PORTC BIT2 <- 0
  F872  F1            				POP 	AF
  F873  C1            				POP		BC
  F874  C9            				RET
                      	
                      	;**** BUSYをCHECK(1) ****
                      	; 7EH BIT7が1になるまでLOP
  F875  017E00        	F1CHK:		LD		BC,007EH
  F878  ED78          				IN		A,(C)
  F87A  E680          				AND		80H        ;PORTC BIT7 = 1?
  F87C  28F7          				JR		Z,F1CHK
  F87E  C9            				RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 7EH BIT7が0になるまでLOOP
  F87F  017E00        	F2CHK:		LD		BC,007EH
  F882  ED78          				IN		A,(C)
  F884  E680          				AND		80H        ;PORTC BIT7 = 0?
  F886  20F7          				JR		NZ,F2CHK
  F888  C9            				RET
                      	
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  F889                	SNDBYTE:
  F889  C5            				PUSH	BC
  F88A  F5            				PUSH	AF
  F88B  1F            				RRA
  F88C  1F            				RRA
  F88D  1F            				RRA
  F88E  1F            				RRA
  F88F  E60F          				AND		0FH
  F891  CD9CF8        				CALL	SND4BIT
  F894  F1            				POP		AF
  F895  E60F          				AND		0FH
  F897  CD9CF8        				CALL	SND4BIT
  F89A  C1            				POP		BC
  F89B  C9            				RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  F89C                	SND4BIT:
  F89C  017C00        				LD		BC,007CH
  F89F  ED79          				OUT		(C),A
  F8A1  3E05          				LD		A,05H
  F8A3  017F00        				LD		BC,007FH
  F8A6  ED79          				OUT		(C),A    ;PORTC BIT2 <- 1
  F8A8  CD75F8        				CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  F8AB  3E04          				LD		A,04H
  F8AD  017F00        				LD		BC,007FH
  F8B0  ED79          				OUT		(C),A    ;PORTC BIT2 <- 0
  F8B2  CD7FF8        				CALL	F2CHK
  F8B5  C9            				RET
                      			
                      	
                      	;*********************** MSHED ライト インフォメーション代替処理 ************
  F8B6                	MSHED:
  F8B6  F3            			DI
  F8B7  D5            			PUSH	DE
  F8B8  C5            			PUSH	BC
  F8B9  E5            			PUSH	HL
  F8BA  ED4322FC      			LD		(FSIZE),BC
  F8BE  2220FC        			LD		(FCB),HL
  F8C1  3E91          			LD		A,91H      ;HEADER SAVEコマンド91H
  F8C3  CD2CFA        			CALL	MCMD       ;コマンドコード送信
  F8C6  A7            			AND		A          ;00以外ならERROR
  F8C7  C238FA        			JP		NZ,MERR
                      	
  F8CA  2A20FC        			LD		HL,(FCB)
  F8CD  ED4B22FC      			LD		BC,(FSIZE)
  F8D1  41            			LD		B,C
  F8D2  7E            	MSH3:	LD		A,(HL)     ;インフォメーション ブロック送信
  F8D3  CD89F8        			CALL	SNDBYTE
  F8D6  23            			INC		HL
  F8D7  05            			DEC		B
  F8D8  20F8          			JR		NZ,MSH3
                      	
  F8DA  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F8DD  A7            			AND		A          ;00以外ならERROR
  F8DE  C238FA        			JP		NZ,MERR
                      	
  F8E1  C333FA        			JP		MRET       ;正常RETURN
                      	
                      	;******************** MSDAT ライト データ代替処理 **********************
  F8E4                	MSDAT:
  F8E4  F3            			DI
  F8E5  D5            			PUSH	DE
  F8E6  C5            			PUSH	BC
  F8E7  E5            			PUSH	HL
  F8E8  2224FC        			LD		(SADRS),HL
  F8EB  ED4322FC      			LD		(FSIZE),BC
  F8EF  3E92          			LD		A,92H      ;DATA SAVEコマンド92H
  F8F1  CD2CFA        			CALL	MCMD       ;コマンドコード送信
  F8F4  A7            			AND		A          ;00以外ならERROR
  F8F5  C238FA        			JP		NZ,MERR
                      	
                      			
  F8F8  2122FC        			LD		HL,FSIZE   ;FSIZE送信
  F8FB  7E            			LD		A,(HL)
  F8FC  CD89F8        			CALL	SNDBYTE
  F8FF  23            			INC		HL
  F900  7E            			LD		A,(HL)
  F901  CD89F8        			CALL	SNDBYTE
                      	
  F904  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F907  A7            			AND		A          ;00以外ならERROR
  F908  C238FA        			JP		NZ,MERR
                      	
  F90B  ED5B22FC      			LD		DE,(FSIZE)
  F90F  2A24FC        			LD		HL,(SADRS)
  F912  7E            	MSD1:	LD		A,(HL)
  F913  CD89F8        			CALL	SNDBYTE      ;SADRSからFSIZE Byteを送信。分割セーブの場合、直前に0436HでOPENされたファイルを対象として256バイトずつ0475HがCALLされる。
  F916  1B            			DEC		DE
  F917  7A            			LD		A,D
  F918  B3            			OR		E
  F919  23            			INC		HL
  F91A  20F6          			JR		NZ,MSD1
                      			
  F91C  C333FA        			JP		MRET       ;正常RETURN
                      	
                      	;************************** MLHED リード インフォメーション代替処理 *****************
  F91F                	MLHED:
  F91F  F3            			DI
  F920  D5            			PUSH	DE
  F921  C5            			PUSH	BC
  F922  E5            			PUSH	HL
  F923  2220FC        			LD		(FCB),HL
  F926  ED4322FC      			LD		(FSIZE),BC
                      	
  F92A  3E03          			LD		A,03H          ;一行分をクリアするため3文字削除、37文字出力
  F92C  320E00        			LD		(CURX),A
  F92F  3E08          			LD		A,08H
  F931  CD1300        			CALL	ACCPRT
  F934  CD1300        			CALL	ACCPRT
  F937  CD1300        			CALL	ACCPRT
  F93A  11F0FA        	MLH6:	LD		DE,MSG_DNAME   ;'DOS FILE:'
  F93D  CD0B00        			CALL	PRINT
  F940  3E09          			LD		A,09H          ;カーソルを9文字目に戻す
  F942  320E00        			LD		(CURX),A
                      	
  F945  1126FC        			LD		DE,BUF    
  F948  CD0300        			CALL	INPUTF
                      			
  F94B  112FFC        			LD		DE,BUF+9
                      			
  F94E  1A            			LD		A,(DE)
                      			
                      	;**** ファイルネームの先頭が'*'なら拡張コマンド処理へ移行 ****
  F94F  FE2A          			CP		'*'
  F951  2848          			JR		Z,MLHCMD
                      	
  F953  3E93          			LD		A,93H      ;HEADER LOADコマンド93H
  F955  CD2CFA        			CALL	MCMD       ;コマンドコード送信
  F958  A7            			AND		A          ;00以外ならERROR
  F959  C238FA        			JP		NZ,MERR
                      	
  F95C                	MLH1:
  F95C  1A            			LD		A,(DE)
  F95D  FE20          			CP		20H                 ;行頭のスペースをファイルネームまで読み飛ばし
  F95F  2003          			JR		NZ,MLH2
  F961  13            			INC		DE
  F962  18F8          			JR		MLH1
                      	
  F964  0620          	MLH2:	LD		B,20H
  F966  1A            	MLH4:	LD		A,(DE)     ;FNAME送信
  F967  CD89F8        			CALL	SNDBYTE
  F96A  13            			INC		DE
  F96B  05            			DEC		B
  F96C  20F8          			JR		NZ,MLH4
  F96E  3E0D          			LD		A,0DH
  F970  CD89F8        			CALL	SNDBYTE
                      			
  F973  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F976  A7            			AND		A          ;00以外ならERROR
  F977  C238FA        			JP		NZ,MERR
                      	
  F97A  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F97D  A7            			AND		A          ;00以外ならERROR
  F97E  C238FA        			JP		NZ,MERR
                      	
  F981  2A20FC        			LD		HL,(FCB)
  F984  ED4B22FC      			LD		BC,(FSIZE)
  F988  41            			LD		B,C
  F989  CD57F8        	MLH5:	CALL	RCVBYTE    ;読みだされたインフォメーションブロックを受信
  F98C  77            			LD		(HL),A
                      	
  F98D  23            			INC		HL
  F98E  05            			DEC		B
  F98F  20F8          			JR		NZ,MLH5
                      	
  F991  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F994  A7            			AND		A          ;00以外ならERROR
  F995  C238FA        			JP		NZ,MERR
                      	
  F998  C333FA        			JP		MRET       ;正常RETURN
                      	
                      	;**************************** アプリケーション内SD-CARD操作処理 **********************
  F99B                	MLHCMD:
  F99B  13            			INC		DE
  F99C  13            			INC		DE
                      	
  F99D                	FC0:		
  F99D  1A            			LD		A,(DE)			;スペース読み飛ばし
  F99E  FE00          			CP		00H
  F9A0  2809          			JR		Z,FC2
  F9A2  13            			INC		DE
  F9A3  FE20          			CP		20H
  F9A5  2002          			JR		NZ,FC1
  F9A7  18F4          			JR		FC0
  F9A9  1B            	FC1:	DEC		DE
  F9AA  1B            			DEC		DE
  F9AB                	FC2:
                      	
  F9AB  21F0FA        			LD		HL,MSG_DNAME         ;行頭に'DOS FILE:'を付けることでカーソルを移動させリターンで実行できるように
  F9AE  010900        			LD		BC,MSG_DNAMEEND-MSG_DNAME
                      	;**** FDLコマンド呼び出し ****
  F9B1  CD60FA        			CALL	DIRLIST
  F9B4  A7            			AND		A          ;00以外ならERROR
  F9B5  2003          			JR		NZ,SERR
                      	;**** ファイルネーム入力へ復帰 ****
  F9B7  C33AF9        			JP		MLH6
                      	
                      	;******* アプリケーション内SD-CARD操作処理用ERROR処理 **************
  F9BA                	SERR:
  F9BA  FEF0          			CP		0F0H
  F9BC  2005          			JR		NZ,SERR3
  F9BE  1173FB        			LD		DE,MSG_F0
  F9C1  180F          			JR		SERRMSG
                      			
  F9C3  FEF1          	SERR3:	CP		0F1H
  F9C5  2005          			JR		NZ,SERR99
  F9C7  118CFB        			LD		DE,MSG_F1
  F9CA  1806          			JR		SERRMSG
                      			
  F9CC  CD0712        	SERR99:	CALL	ACHXPR
  F9CF  11A5FB        			LD		DE,MSG99
                      			
  F9D2                	SERRMSG:
  F9D2  CD0B00        			CALL	PRINT
  F9D5  CDA704        			CALL	CR1
  F9D8  C1            			POP		BC
  F9D9  D1            			POP		DE
  F9DA  E1            			POP		HL
                      	;**** ファイルネーム入力へ復帰 ****
  F9DB  C33AF9        			JP		MLH6
                      	
                      	
                      	;**************************** MLDAT リード データ代替処理 ********************
  F9DE                	MLDAT:
  F9DE  F3            			DI
  F9DF  D5            			PUSH	DE
  F9E0  C5            			PUSH	BC
  F9E1  E5            			PUSH	HL
  F9E2  2224FC        			LD		(SADRS),HL
  F9E5  ED4322FC      			LD		(FSIZE),BC
  F9E9  3E94          			LD		A,94H      ;DATA LOADコマンド94H
  F9EB  CD2CFA        			CALL	MCMD       ;コマンドコード送信
  F9EE  A7            			AND		A          ;00以外ならERROR
  F9EF  C238FA        			JP		NZ,MERR
                      	
  F9F2  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F9F5  A7            			AND		A          ;00以外ならERROR
  F9F6  C238FA        			JP		NZ,MERR
                      	
  F9F9  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F9FC  A7            			AND		A          ;00以外ならERROR
  F9FD  C238FA        			JP		NZ,MERR
                      	
  FA00  1122FC        			LD		DE,FSIZE   ;FSIZE送信
  FA03  1A            			LD		A,(DE)
  FA04  CD89F8        			CALL	SNDBYTE
  FA07  13            			INC		DE
  FA08  1A            			LD		A,(DE)
  FA09  CD89F8        			CALL	SNDBYTE
  FA0C  CD18FA        			CALL	DBRCV2      ;FSIZE分のデータを受信し、SADRSから格納。分割ロードの場合、直前に0436HでOPENされたファイルを対象として256バイトずつSADRSが加算されて04F8HがCALLされる。
                      	
  FA0F  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  FA12  A7            			AND		A          ;00以外ならERROR
  FA13  C238FA        			JP		NZ,MERR
                      	
  FA16  181B          			JR		MRET       ;正常RETURN
                      	
                      	;データ受信2
  FA18  ED5B22FC      	DBRCV2:	LD		DE,(FSIZE)
  FA1C  2A24FC        			LD		HL,(SADRS)
  FA1F  CD57F8        	DBRLP2:	CALL	RCVBYTE
  FA22  77            			LD		(HL),A
  FA23  1B            			DEC		DE
  FA24  7A            			LD		A,D
  FA25  B3            			OR		E
  FA26  23            			INC		HL
  FA27  20F6          			JR		NZ,DBRLP2   ;DE=0までLOOP
  FA29  C9            			RET
                      	
                      	;************************** VERIFY ベリファイ代替処理 *******************
  FA2A  AF            	MVRFY:	XOR		A          ;正常終了フラグ
                      	
  FA2B  C9            			RET
                      	
                      	;******* 代替処理用コマンドコード送信 (IN:A コマンドコード) **********
  FA2C                	MCMD:
  FA2C  CD89F8        			CALL	SNDBYTE    ;コマンドコード送信
  FA2F  CD57F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  FA32  C9            			RET
                      	
                      	;****** 代替処理用正常RETURN処理 **********
  FA33  E1            	MRET:	POP		HL
  FA34  C1            			POP		BC
  FA35  D1            			POP		DE
  FA36  AF            			XOR		A          ;正常終了フラグ
                      			
  FA37  C9            			RET
                      	
                      	;******* 代替処理用ERROR処理 **************
  FA38                	MERR:
  FA38  FEF0          			CP		0F0H
  FA3A  2005          			JR		NZ,MERR3
  FA3C  1173FB        			LD		DE,MSG_F0
  FA3F  180F          			JR		MERRMSG
                      			
  FA41  FEF1          	MERR3:	CP		0F1H
  FA43  2005          			JR		NZ,MERR99
  FA45  118CFB        			LD		DE,MSG_F1
  FA48  1806          			JR		MERRMSG
                      			
  FA4A  CD0712        	MERR99:	CALL	ACHXPR
  FA4D  11A5FB        			LD		DE,MSG99
                      			
  FA50                	MERRMSG:
  FA50  CD0B00        			CALL	PRINT
  FA53  CDA704        			CALL	CR1
  FA56  E1            			POP		HL
  FA57  C1            			POP		BC
  FA58  D1            			POP		DE
  FA59  3E02          			LD		A,02H
  FA5B  37            			SCF
                      	
  FA5C  C9            			RET
                      	
  FA5D                	DEFDIR:
  FA5D  2A4C20        			DB		'*L '
  FA60                	DEND:
                      	
                      	;**** DIRLIST本体 (HL=行頭に付加する文字列の先頭アドレス BC=行頭に付加する文字列の長さ) ****
                      	;****              戻り値 A=エラーコード ****
  FA60                	DIRLIST:
  FA60  3E83          				LD		A,83H      ;DIRLISTコマンド83Hを送信
  FA62  CDACFB        				CALL	STCD       ;コマンドコード送信
  FA65  A7            				AND		A          ;00以外ならERROR
  FA66  C2EFFA        				JP		NZ,DLRET
                      			
  FA69  C5            				PUSH	BC
  FA6A  0621          				LD		B,21H
  FA6C  1A            	STLT1:		LD		A,(DE)
  FA6D  CD5114        				CALL	TUPPER
  FA70  CD89F8        	STLT2:		CALL	SNDBYTE           ;比較文字列を送信
  FA73  13            				INC		DE
  FA74  10F6          				DJNZ	STLT1
  FA76  C1            				POP		BC
  FA77                	DL1:
  FA77  E5            				PUSH	HL
  FA78  C5            				PUSH	BC
  FA79  1126FC        				LD		DE,BUF
  FA7C  EDB0          				LDIR
  FA7E  EB            				EX		DE,HL
  FA7F  CD57F8        	DL2:		CALL	RCVBYTE           ;'00H'を受信するまでを一行とする
  FA82  FE00          				CP		00H
  FA84  280C          				JR		Z,DL3
  FA86  FEFF          				CP		0FFH              ;'0FFH'を受信したら終了
  FA88  2816          				JR		Z,DL4
  FA8A  FEFE          				CP		0FEH              ;'0FEH'を受信したら一時停止して一文字入力待ち
  FA8C  2819          				JR		Z,DL5
  FA8E  77            				LD		(HL),A
  FA8F  23            				INC		HL
  FA90  18ED          				JR		DL2
  FA92  77            	DL3:		LD		(HL),A
  FA93  1126FC        				LD		DE,BUF             ;'00H'を受信したら一行分を表示して改行
  FA96  CD0B00        				CALL	PRINT
  FA99  CDA304        				CALL	CR2
  FA9C  C1            				POP		BC
  FA9D  E1            				POP		HL
  FA9E  18D7          				JR		DL1
  FAA0  CD57F8        	DL4:		CALL	RCVBYTE           ;状態取得(00H=OK)
  FAA3  C1            				POP		BC
  FAA4  E1            				POP		HL
  FAA5  1848          				JR		DLRET
                      	
  FAA7  1116FB        	DL5:		LD		DE,MSG_KEY1        ;HIT ANT KEY表示
  FAAA  CD0B00        				CALL	PRINT
  FAAD  3E1E          				LD		A,01EH
  FAAF  CDC804        				CALL	ACCDIS
  FAB2  112BFB        				LD		DE,MSG_KEY2        ;HIT ANT KEY表示
  FAB5  CD0B00        				CALL	PRINT
  FAB8  CDA304        				CALL	CR2
  FABB  3E01          	DL6:		LD		A,01H
  FABD  CD1B00        				CALL	INKEY$            ;1文字入力待ち
  FAC0  CD5114        				CALL	TUPPER
  FAC3  FE00          				CP		00H
  FAC5  28F4          				JR		Z,DL6
  FAC7  FE03          				CP		03H               ;SHIFT+BREAKで打ち切り
  FAC9  281A          				JR		Z,DL7
  FACB  FE1B          				CP		1BH               ;ESCで打ち切り
  FACD  2816          				JR		Z,DL7
  FACF  FE1E          				CP		1EH               ;カーソル↑で打ち切り
  FAD1  2808          				JR		Z,DL9
  FAD3  FE42          				CP		42H               ;「B」で前ページ
  FAD5  2810          				JR		Z,DL8
  FAD7  3E00          				LD		A,00H             ;それ以外で継続
  FAD9  180C          				JR		DL8
  FADB  3E1E          	DL9:		LD		A,01EH            ;カーソル↑で打ち切ったときにカーソル2行上へ
  FADD  CD1300        				CALL	ACCPRT
  FAE0  3E1E          				LD		A,01EH
  FAE2  CD1300        				CALL	ACCPRT
  FAE5  3EFF          	DL7:		LD		A,0FFH            ;0FFH中断コードを送信
  FAE7  CD89F8        	DL8:		CALL	SNDBYTE
  FAEA  CDA304        				CALL	CR2
  FAED  1890          				JR		DL2
                      			
  FAEF                	DLRET:		
  FAEF  C9            				RET
                      			
  FAF0                	MSG_DNAME:
  FAF0  444F532046494C			DB		'DOS FILE:'
  FAF9                	MSG_DNAMEEND:
  FAF9  20202020202020			DB		'                            '
  FB15  00            			DB		00H
                      			
  FB16                	MSG_KEY1:
  FB16  4E4558543A414E				DB		'NEXT:ANY BACK:B BRK:'
  FB2A  00            				DB		00H
  FB2B                	MSG_KEY2:
  FB2B  206F7220455343				DB		' or ESC or SHT+BRK'
  FB3D  00            				DB		00H
                      			
  FB3E                	MSG_LD:
  FB3E  4C4F4144494E47			DB		'LOADING '
  FB46  00            			DB		00H
                      	
  FB47                	WRMSG:
  FB47  5752495445494E			DB		'WRITEING '
  FB50  00            			DB		00H
                      	
  FB51                	MSG_FNAME:
  FB51  46494C45204E41			DB		'FILE NAME FAILED!'
  FB62  00            			DB		00H
                      			
  FB63                	MSG_CMD:
  FB63  434F4D4D414E44			DB		'COMMAND FAILED!'
  FB72  00            			DB		00H
                      			
  FB73                	MSG_F0:
  FB73  53442D43415244			DB		'SD-CARD INITIALIZE ERROR'
  FB8B  00            			DB		00H
                      			
  FB8C                	MSG_F1:
  FB8C  4E4F542046494E			DB		'NOT FIND FILE'
  FB99  00            			DB		00H
                      			
  FB9A                	MSG_F3:
  FB9A  46494C45204558			DB		'FILE EXIST'
  FBA4  00            			DB		00H
                      			
  FBA5                	MSG99:
  FBA5  204552524F52  			DB		' ERROR'
  FBAB  00            			DB		00H
                      			
                      	;**** コマンド送信 (IN:A コマンドコード)****
  FBAC  CD89F8        	STCD:		CALL	SNDBYTE    ;Aレジスタのコマンドコードを送信
  FBAF  CD57F8        				CALL	RCVBYTE    ;状態取得(00H=OK)
  FBB2  C9            				RET
                      	
                      	;**** コマンド、ファイル名送信 (IN:A コマンドコード HL:ファイルネームの先頭)****
  FBB3  CDC7FB        	STCMD:		CALL	STFN       ;ファイルネーム取得
  FBB6  E5            				PUSH	HL
  FBB7  CDACFB        				CALL	STCD       ;コマンドコード送信
  FBBA  E1            				POP		HL
  FBBB  A7            				AND		A          ;00以外ならERROR
  FBBC  C2EEFB        				JP		NZ,SVER0
  FBBF  CDD6FB        				CALL	STFS       ;ファイルネーム送信
  FBC2  A7            				AND		A          ;00以外ならERROR
  FBC3  C2EEFB        				JP		NZ,SVER0
  FBC6  C9            				RET
                      	
                      	;****** FILE NAME 取得 (IN:DE コマンド文字の次の文字 OUT:HL ファイルネームの先頭)*********
  FBC7  F5            	STFN:		PUSH	AF
  FBC8  13            	STFN1:		INC		DE         ;ファイルネームまでスペース読み飛ばし
  FBC9  1A            				LD		A,(DE)
  FBCA  FE20          				CP		20H
  FBCC  28FA          				JR		Z,STFN1
  FBCE  FE30          				CP		30H        ;「0」以上の文字でなければエラーとする
  FBD0  DAE9FB        				JP		C,STSV2
  FBD3  EB            				EX		DE,HL
  FBD4  F1            				POP		AF
  FBD5  C9            				RET
                      	
                      	;**** ファイルネーム送信(IN:HL ファイルネームの先頭) ******
  FBD6  0620          	STFS:		LD		B,20H
  FBD8  7E            	STFS1:		LD		A,(HL)     ;FNAME送信
  FBD9  CD89F8        				CALL	SNDBYTE
  FBDC  23            				INC		HL
  FBDD  05            				DEC		B
  FBDE  20F8          				JR		NZ,STFS1
  FBE0  3E0D          				LD		A,0DH
  FBE2  CD89F8        				CALL	SNDBYTE
  FBE5  CD57F8        				CALL	RCVBYTE    ;状態取得(00H=OK)
  FBE8  C9            				RET
                      	
  FBE9                	STSV2:                      ;ファイルネームの取得に失敗
  FBE9  1151FB        				LD		DE,MSG_FNAME
  FBEC  182B          				JR		ERRMSG
  FBEE                	SVER0:
  FBEE  D1            				POP		DE         ;CALL元STACKを破棄する
  FBEF                	SVERR:
  FBEF  FEF0          				CP		0F0H
  FBF1  2005          				JR		NZ,ERR3
  FBF3  1173FB        				LD		DE,MSG_F0  ;SD-CARD INITIALIZE ERROR
  FBF6  1821          				JR		ERRMSG
  FBF8  FEF1          	ERR3:		CP		0F1H
  FBFA  2005          				JR		NZ,ERR4
  FBFC  118CFB        				LD		DE,MSG_F1  ;NOT FIND FILE
  FBFF  1818          				JR		ERRMSG
  FC01  FEF3          	ERR4:		CP		0F3H
  FC03  2005          				JR		NZ,ERR5
  FC05  119AFB        				LD		DE,MSG_F3  ;FILE EXIST
  FC08  180F          				JR		ERRMSG
  FC0A  FEF4          	ERR5:		CP		0F4H
  FC0C  2005          				JR		NZ,ERR99
  FC0E  1163FB        				LD		DE,MSG_CMD
  FC11  1806          				JR		ERRMSG
  FC13  CD0712        	ERR99:		CALL	ACHXPR
  FC16  11A5FB        				LD		DE,MSG99   ;その他ERROR
  FC19  CD0B00        	ERRMSG:		CALL	PRINT
  FC1C  CDA304        				CALL	CR2
  FC1F  C9            	MON:		RET
                      	
  FC20                	ENT6:
                      	
                      	
  FC20                	FCB			DS		2
  FC22                	FSIZE		DS		2
  FC24                	SADRS		DS		2
  FC26                	BUF:		DS		80
                      	
  FC76                				END
