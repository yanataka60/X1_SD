			  Z80 ASSEMBLER - ZASM VER 1.6
  0003                	INPUTF		EQU		0003H	;１行入力
  000B                	PRINT		EQU		000BH	;文字列のプリント
  0013                	ACCPRT		EQU		0013H	;１文字出力
  001B                	INKEY$		EQU		001BH	;１文字入力
  0023                	TAK49S		EQU		0023H	;サブCPU80C49との通信
  002B                	PCG			EQU		002BH	;PCGのセット
  0033                	CGREAD		EQU		0033H	;PCGの内容を読む
  003B                	SAVE1		EQU		003BH	;FCBをCMTにセーブ
  003E                	SAVE2		EQU		003EH	;データをCMTにセーブ
  0041                	LOAD1		EQU		0041H	;FCBをCMTからロード
  0044                	LOAD2		EQU		0044H	;CMTからデータをロード
  0047                	VERFY2		EQU		0047H	;CMTのデータとメイン・メモリのデータを比較
  004A                	BRKCHK		EQU		004AH	;SHIFT+BREAK CHECK
  004D                	WIDTH48		EQU		004DH	;Aレジスタの値により40文字、80文字モードを指定
  012D                	KVECIN		EQU		012DH	;キーボード通信?
  0133                	KVEC00		EQU		0133H	;80C49にキー入力割込みベクトルの下位を伝達
  013C                	PSGINT		EQU		013CH	;PSGの出力を止める
  015A                	BINPUT		EQU		015AH	;１行入力 BASIC用
  0346                	INTKEY		EQU		0346H	;割込みキー入力の実行
  04A3                	CR2			EQU		04A3H	;行の先頭でないなら改行
  04A7                	CR1			EQU		04A7H	;改行
  04AB                	TABPRT		EQU		04ABH	;X座標が10の倍数までスペース出力
  04BA                	SPPRT		EQU		04BAH	;スペース出力
  04C8                	ACCDIS		EQU		04C8H	;１文字出力 コントロール・コード表示版
  054A                	ADRCAL		EQU		054AH	;現在カーソル位置のテキストVRAMのアドレス計算
  054D                	ADRCA2		EQU		054DH	;HLレジスタで示したテキスト座病のテキストVRAMのアドレス計算
  0577                	CTRLJB		EQU		0577H	;コントロール・コード処理
  07F7                	BEEP		EQU		07F7H	;ベル音を鳴らす
  098C                	WIDTH80		EQU		098CH	;WIDTH80
  0998                	WIDTH40		EQU		0998H	;WIDTH40
  09C0                	SCRNOT		EQU		09C0H	;表示画面のページ指定
  09F5                	SCRNIN		EQU		09F5H	;書き込み画面のページ指定
  0A3F                	CTRLDQ		EQU		0A3FH	;コンソールと入出力ページの初期化
  0A5A                	STPRIO		EQU		0A5AH	;パレット、プライオリティ・セット
  0A6B                	CLST		EQU		0A6BH	;テキスト・クリア
  0A8A                	STCLSG		EQU		0A8AH	;グラフィック・クリア(SCRMODの値による)
  0A8F                	CLSG		EQU		0A8FH	;グラフィック・クリア(SCRMODの値によらない)
  0B49                	RECV49		EQU		0B49H	;サブCPU8049からデータを受信
  0B54                	TRANS49		EQU		0B54H	;サブCPU8049に送信要求コードを送る
  0B61                	OBFCK		EQU		0B61H	;80C49がデータを受け取れる状態になるまでウェイト
  0B6B                	IBFCK		EQU		0B6BH	;80C49からデータが送られてくるまでウェイト
  0C8A                	WBYTE		EQU		0C8AH	;CMT 1Byte Write
  0CAA                	RBYTE		EQU		0CAAH	;CMT 1byte Read
  0CD6                	CLRSUM		EQU		0CD6H	;チェックサムバッファのクリア
  0CDF                	GAP			EQU		0CDFH	;CMTへリーダー音の書込み
  0D20                	TMARK		EQU		0D20H	;CMTのリーダー音待ち
  0D8A                	SHORT		EQU		0D8AH	;CMTへ1ビット(0)書き込み
  0DA4                	LONG		EQU		0DA4H	;CMTへ1ビット(1)書き込み
  0DC7                	MOTOR		EQU		0DC7H	;CMT読み書き開始
  0DEC                	CMTCOM		EQU		0DECH	;CMTに対しコマンドを実行
  0DF6                	CMTSNS		EQU		0DF6H	;CMTの状態を示す
  0DFE                	COMOUT		EQU		0DFEH	;サブCPU80C49へコマンド送信
  0E77                	PSGSET		EQU		0E77H	;HLで始まる8バイトのデータをPSGにセット
  0FE2                	MONOP		EQU		0FE2H	;モニタコールドスタート
  1003                	HOTSTA		EQU		1003H	;モニタホットスタート
  111F                	HLSET		EQU		111FH	;バッファ上の文字を16進数に変換してHLレジスタにセット
  1143                	HEXCHL		EQU		1143H	;DEで示すアドレスの文字を16進数に変換してAレジスタにセット
  115E                	ACSET		EQU		115EH	;バッファ上の文字を16進数に変換してAレジスタにセット
  11AF                	DUMP		EQU		11AFH	;HLで示すアドレスからCバイトメモリダンプ
  1202                	HLHXPR		EQU		1202H	;HLレジスタの値を16進数で出力
  1207                	ACHXPR		EQU		1207H	;Aレジスタの値を16進数で出力
  12D5                	CR1LPL		EQU		12D5H	;LFのプリンタ出力
  12DC                	ACCLPL		EQU		12DCH	;プリンタへの1文字出力
  1315                	TABLPL		EQU		1315H	;HTABのプリンタ出力
  1321                	FNPRHL		EQU		1321H	;FCBのファイル・ネームをプリント
  134E                	FNMTCH		EQU		134EH	;ファイル・ネームとパスワードを比較
  1394                	SETDIQ		EQU		1394H	;FCBにファイルネームをセット
  1420                	ACCPRP		EQU		1420H	;画面またはプリンタへの1文字出力
  142F                	PRINTP		EQU		142FH	;文字列を画面またはプリンタに出力
  143C                	TABPRP		EQU		143CH	;HTABを画面またはプリンタに出力
  1446                	CR1PRP		EQU		1446H	;改行コードを画面またはプリンタに出力
  1451                	TUPPER		EQU		1451H	;大文字に変換
                      	
  0006                	LINLIM		EQU		0006H	;1行入力のバッファの長さのリミット R/W
  0007                	WIDTHO		EQU		0007H	;WIDTHの値 R
  000E                	CURX		EQU		000EH	;カーソルのX座標 R/W
  000F                	CURY		EQU		000FH	;カーソルのY座標 R/W
  0016                	CURYST		EQU		0016H	;テキスト表示エリアのY座標の先頭 R/W
  0017                	CURYED		EQU		0017H	;テキスト表示エリアのY座標の終わり R/W
  001E                	CURXST		EQU		001EH	;テキスト表示エリアのX座標の先頭 R/W
  001F                	CURXED		EQU		001FH	;テキスト表示エリアのX座標の終わり R/W
  0026                	COLORF		EQU		0026H	;カラーアトリビュートの値 R/W
  0027                	CLSCHR		EQU		0027H	;NULキャラクタ・コード R/W
  002E                	KEYDAT		EQU		002EH	;割込みキー入力で入ってきたキーコード(ASCII) R
                      				;EQU	002FH	;割込みキー入力で入ってきたキーコード(ファンクション・コード) R
  0036                	BRKBUF		EQU		0036H	;割込みキー入力によって入力されるBREAKおよびCTRL+Sを知らせるバッファ R
  0037                	KEYFLG		EQU		0037H	;有効なキーが割り込んだ時は0以外、無効なキーが割り込んだ時は0 R
  00E9                	INIADR		EQU		00E9H	;表示している画面のオフセット値 R
                      				;EQU	00EAH
  00EB                	INIADW		EQU		00EBH	;アクセスしている画面のオフセット値 R
                      				;EQU	00ECH
  00F6                	PRRIOF		EQU		00F6H	;青のパレット R
  00F7                	GPRIOF		EQU		00F7H	;赤のパレット R
  00F8                	BPRIOF		EQU		00F8H	;緑のパレット R
  00F9                	TPRIOF		EQU		00F9H	;テキストの優先順位 R
  0366                	REPTF1		EQU		0366H	;リピートON/OFF R/W
  0A8B                	SCRMOD		EQU		0A8BH	;グラフィックのクリア指定 R/W
  0E90                	CLICKF		EQU		0E90H	;クリック音の制御フラグ R/W
  0EA5                	KBUFSW		EQU		0EA5H	;1行入力時、先行入力を捨てるかどうかのフラグ R/W
  0EA6                	POINT1		EQU		0EA6H	;INBUF内の書き込みポインタ R/W
  0EA7                	POINT2		EQU		0EA7H	;INBUF内読み込みポインタ R/W
  0EA8                	INBUF		EQU		0EA8H	;～0EE7H 先行入力およびファンクション・キー入力のためのデータ・バッファ R/W
  0EF2                	TABBUF		EQU		0EF2H	;～0F41H 水平タブ設定バッファ
  0F42                	FUNBUF		EQU		0F42H	;～0FE1H ファンクション・キーが定義されているワーク R/W
  1472                	FILOUT		EQU		1472H	;プリンタ・モード R/W
  1480                	DIRIMG		EQU		1480H	;～149FH FCB R/W
                      	;IPLFCB		EQU		01480H	;CZ-8CB01
                      	;IPLFCB		EQU		0FF00H
                      	;FNAME		EQU		IPLFCB+1
                      	;FSIZE		EQU		IPLFCB+18
                      	;SADRS		EQU		IPLFCB+20
                      	;EXEAD		EQU		IPLFCB+22
  145A                	WRTMES		EQU		145AH	;CMT WRITNG MESSAGE R
  1462                	FINMES		EQU		1462H	;CMT FIND MESSAGE R
  146A                	SKPMES		EQU		146AH	;CMT SKIP MESSAGE R
                      	
                      	;07CH PORTA 送信データ(下位4ビット)
                      	;07DH PORTB 受信データ(8ビット)
                      	;
                      	;07EH PORTC Bit
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;07FH コントロールレジスタ
                      	
  9E10                				ORG		9E10H
                      	
  9E10                	START:
  9E10  211E9E        				LD		HL,ENT0       ;SDアクセスルーチンをF800Hへ転送
  9E13  1100F8        				LD		DE,ENT1
  9E16  014A04        				LD		BC,ENT6-ENT1
  9E19  EDB0          				LDIR
  9E1B  C312F8        				JP		INIT
                      	
  9E1E                	ENT0:
  F800                				ORG		0F800H
  F800  C3E0F8        	ENT1:		JP		MSHED		;SAVE1	003BH	0B75H
  F803  C30EF9        	ENT2:		JP		MSDAT		;SAVE2	003EH	0B79H
  F806  C349F9        	ENT3:		JP		MLHED		;LOAD1	0041H	0B9AH
  F809  C308FA        	ENT4:		JP		MLDAT		;LOAD2	0044H	0B9EH
  F80C  C354FA        	ENT5:		JP		MVRFY		;VERFY2	0047H	0BAEH
  F80F  C312F8        				JP		INIT
                      	
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  F812  3E8A          	INIT:		LD		A,8AH
  F814  017F00        				LD		BC,007FH
  F817  ED79          				OUT		(C),A
                      	;出力BITをリセット
  F819  3E00          	INIT2:		LD		A,00H      ;PORTA <- 0
  F81B  017C00        				LD		BC,007CH
  F81E  ED79          				OUT		(C),A
  F820  017E00        				LD		BC,007EH
  F823  ED79          				OUT		(C),A   ;PORTC <- 0
                      				
                      	;**** BASIC起動時のメモリクリアを無効化 *****
  F825  AF            				XOR		A
  F826  21A614        				LD		HL,14A6H
  F829  77            				LD		(HL),A
  F82A  23            				INC		HL
  F82B  77            				LD		(HL),A
  F82C  23            				INC		HL
  F82D  77            				LD		(HL),A
  F82E  23            				INC		HL
  F82F  77            				LD		(HL),A
  F830  23            				INC		HL
  F831  77            				LD		(HL),A
  F832  23            				INC		HL
  F833  77            				LD		(HL),A
  F834  23            				INC		HL
                      	;**** CMT関連ジャンプテーブル修正 ****
  F835  3EC3          				LD		A,0C3H
                      	
  F837  32750B        				LD		(0B75H),A
  F83A  21E0F8        				LD		HL,MSHED
  F83D  22760B        				LD		(0B75H+1),HL
                      	
  F840  32790B        				LD		(0B79H),A
  F843  210EF9        				LD		HL,MSDAT
  F846  227A0B        				LD		(0B79H+1),HL
                      	
  F849  329A0B        				LD		(0B9AH),A
  F84C  2149F9        				LD		HL,MLHED
  F84F  229B0B        				LD		(0B9AH+1),HL
                      	
  F852  329E0B        				LD		(0B9EH),A
  F855  2108FA        				LD		HL,MLDAT
  F858  229F0B        				LD		(0B9EH+1),HL
                      	
  F85B  32AE0B        				LD		(0BAEH),A
  F85E  2154FA        				LD		HL,MVRFY
  F861  22AF0B        				LD		(0BAEH+1),HL
                      	;**** MEMORY CLEAR 9E10H～F7FFH ****
  F864  21109E        				LD		HL,START
  F867  11119E        				LD		DE,START+1
  F86A  01EF59        				LD		BC,ENT1-START-1
  F86D  3600          				LD		(HL),00H
  F86F  EDB0          				LDIR
                      	
                      	;**** MEMORY CLEAR FC4AH～FF00H ****
  F871  214AFC        				LD		HL,ENT6
  F874  114BFC        				LD		DE,ENT6+1
  F877  01B502        				LD		BC,0FF00H-ENT6-1
  F87A  3600          				LD		(HL),00H
  F87C  EDB0          				LDIR
                      	
  F87E  C30000        				JP		0000H      ;BASIC START
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  F881                	RCVBYTE:
  F881  C5            				PUSH	BC
  F882  CD9FF8        				CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  F885  017D00        				LD		BC,007DH
  F888  ED78          				IN		A,(C)   ;PORTB -> A
  F88A  F5            				PUSH 	AF
  F88B  3E05          				LD		A,05H
  F88D  017F00        				LD		BC,007FH
  F890  ED79          				OUT		(C),A    ;PORTC BIT2 <- 1
  F892  CDA9F8        				CALL	F2CHK      ;PORTC BIT7が0になるまでLOOP
  F895  3E04          				LD		A,04H
  F897  017F00        				LD		BC,007FH
  F89A  ED79          				OUT		(C),A    ;PORTC BIT2 <- 0
  F89C  F1            				POP 	AF
  F89D  C1            				POP		BC
  F89E  C9            				RET
                      	
                      	;**** BUSYをCHECK(1) ****
                      	; 7EH BIT7が1になるまでLOP
  F89F  017E00        	F1CHK:		LD		BC,007EH
  F8A2  ED78          				IN		A,(C)
  F8A4  E680          				AND		80H        ;PORTC BIT7 = 1?
  F8A6  28F7          				JR		Z,F1CHK
  F8A8  C9            				RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 7EH BIT7が0になるまでLOOP
  F8A9  017E00        	F2CHK:		LD		BC,007EH
  F8AC  ED78          				IN		A,(C)
  F8AE  E680          				AND		80H        ;PORTC BIT7 = 0?
  F8B0  20F7          				JR		NZ,F2CHK
  F8B2  C9            				RET
                      	
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  F8B3                	SNDBYTE:
  F8B3  C5            				PUSH	BC
  F8B4  F5            				PUSH	AF
  F8B5  1F            				RRA
  F8B6  1F            				RRA
  F8B7  1F            				RRA
  F8B8  1F            				RRA
  F8B9  E60F          				AND		0FH
  F8BB  CDC6F8        				CALL	SND4BIT
  F8BE  F1            				POP		AF
  F8BF  E60F          				AND		0FH
  F8C1  CDC6F8        				CALL	SND4BIT
  F8C4  C1            				POP		BC
  F8C5  C9            				RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  F8C6                	SND4BIT:
  F8C6  017C00        				LD		BC,007CH
  F8C9  ED79          				OUT		(C),A
  F8CB  3E05          				LD		A,05H
  F8CD  017F00        				LD		BC,007FH
  F8D0  ED79          				OUT		(C),A    ;PORTC BIT2 <- 1
  F8D2  CD9FF8        				CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  F8D5  3E04          				LD		A,04H
  F8D7  017F00        				LD		BC,007FH
  F8DA  ED79          				OUT		(C),A    ;PORTC BIT2 <- 0
  F8DC  CDA9F8        				CALL	F2CHK
  F8DF  C9            				RET
                      			
                      	
                      	;*********************** MSHED ライト インフォメーション代替処理 ************
  F8E0                	MSHED:
  F8E0  F3            			DI
  F8E1  D5            			PUSH	DE
  F8E2  C5            			PUSH	BC
  F8E3  E5            			PUSH	HL
  F8E4  ED434CFC      			LD		(FSIZE),BC
  F8E8  224AFC        			LD		(FCB),HL
  F8EB  3E91          			LD		A,91H      ;HEADER SAVEコマンド91H
  F8ED  CD56FA        			CALL	MCMD       ;コマンドコード送信
  F8F0  A7            			AND		A          ;00以外ならERROR
  F8F1  C262FA        			JP		NZ,MERR
                      	
  F8F4  2A4AFC        			LD		HL,(FCB)
  F8F7  ED4B4CFC      			LD		BC,(FSIZE)
  F8FB  41            			LD		B,C
  F8FC  7E            	MSH3:	LD		A,(HL)     ;インフォメーション ブロック送信
  F8FD  CDB3F8        			CALL	SNDBYTE
  F900  23            			INC		HL
  F901  05            			DEC		B
  F902  20F8          			JR		NZ,MSH3
                      	
  F904  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F907  A7            			AND		A          ;00以外ならERROR
  F908  C262FA        			JP		NZ,MERR
                      	
  F90B  C35DFA        			JP		MRET       ;正常RETURN
                      	
                      	;******************** MSDAT ライト データ代替処理 **********************
  F90E                	MSDAT:
  F90E  F3            			DI
  F90F  D5            			PUSH	DE
  F910  C5            			PUSH	BC
  F911  E5            			PUSH	HL
  F912  224EFC        			LD		(SADRS),HL
  F915  ED434CFC      			LD		(FSIZE),BC
  F919  3E92          			LD		A,92H      ;DATA SAVEコマンド92H
  F91B  CD56FA        			CALL	MCMD       ;コマンドコード送信
  F91E  A7            			AND		A          ;00以外ならERROR
  F91F  C262FA        			JP		NZ,MERR
                      	
                      			
  F922  214CFC        			LD		HL,FSIZE   ;FSIZE送信
  F925  7E            			LD		A,(HL)
  F926  CDB3F8        			CALL	SNDBYTE
  F929  23            			INC		HL
  F92A  7E            			LD		A,(HL)
  F92B  CDB3F8        			CALL	SNDBYTE
                      	
  F92E  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F931  A7            			AND		A          ;00以外ならERROR
  F932  C262FA        			JP		NZ,MERR
                      	
  F935  ED5B4CFC      			LD		DE,(FSIZE)
  F939  2A4EFC        			LD		HL,(SADRS)
  F93C  7E            	MSD1:	LD		A,(HL)
  F93D  CDB3F8        			CALL	SNDBYTE      ;SADRSからFSIZE Byteを送信。分割セーブの場合、直前に0436HでOPENされたファイルを対象として256バイトずつ0475HがCALLされる。
  F940  1B            			DEC		DE
  F941  7A            			LD		A,D
  F942  B3            			OR		E
  F943  23            			INC		HL
  F944  20F6          			JR		NZ,MSD1
                      			
  F946  C35DFA        			JP		MRET       ;正常RETURN
                      	
                      	;************************** MLHED リード インフォメーション代替処理 *****************
  F949                	MLHED:
  F949  F3            			DI
  F94A  D5            			PUSH	DE
  F94B  C5            			PUSH	BC
  F94C  E5            			PUSH	HL
  F94D  224AFC        			LD		(FCB),HL
  F950  ED434CFC      			LD		(FSIZE),BC
                      	
  F954  3E03          			LD		A,03H          ;一行分をクリアするため3文字削除、37文字出力
  F956  320E00        			LD		(CURX),A
  F959  3E08          			LD		A,08H
  F95B  CD1300        			CALL	ACCPRT
  F95E  CD1300        			CALL	ACCPRT
  F961  CD1300        			CALL	ACCPRT
  F964  111AFB        	MLH6:	LD		DE,MSG_DNAME   ;'DOS FILE:'
  F967  CD0B00        			CALL	PRINT
  F96A  3E09          			LD		A,09H          ;カーソルを9文字目に戻す
  F96C  320E00        			LD		(CURX),A
                      	
  F96F  1150FC        			LD		DE,BUF    
  F972  CD0300        			CALL	INPUTF
                      			
  F975  1159FC        			LD		DE,BUF+9
                      			
  F978  1A            			LD		A,(DE)
                      			
                      	;**** ファイルネームの先頭が'*'なら拡張コマンド処理へ移行 ****
  F979  FE2A          			CP		'*'
  F97B  2848          			JR		Z,MLHCMD
                      	
  F97D  3E93          			LD		A,93H      ;HEADER LOADコマンド93H
  F97F  CD56FA        			CALL	MCMD       ;コマンドコード送信
  F982  A7            			AND		A          ;00以外ならERROR
  F983  C262FA        			JP		NZ,MERR
                      	
  F986                	MLH1:
  F986  1A            			LD		A,(DE)
  F987  FE20          			CP		20H                 ;行頭のスペースをファイルネームまで読み飛ばし
  F989  2003          			JR		NZ,MLH2
  F98B  13            			INC		DE
  F98C  18F8          			JR		MLH1
                      	
  F98E  0620          	MLH2:	LD		B,20H
  F990  1A            	MLH4:	LD		A,(DE)     ;FNAME送信
  F991  CDB3F8        			CALL	SNDBYTE
  F994  13            			INC		DE
  F995  05            			DEC		B
  F996  20F8          			JR		NZ,MLH4
  F998  3E0D          			LD		A,0DH
  F99A  CDB3F8        			CALL	SNDBYTE
                      			
  F99D  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F9A0  A7            			AND		A          ;00以外ならERROR
  F9A1  C262FA        			JP		NZ,MERR
                      	
  F9A4  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F9A7  A7            			AND		A          ;00以外ならERROR
  F9A8  C262FA        			JP		NZ,MERR
                      	
  F9AB  2A4AFC        			LD		HL,(FCB)
  F9AE  ED4B4CFC      			LD		BC,(FSIZE)
  F9B2  41            			LD		B,C
  F9B3  CD81F8        	MLH5:	CALL	RCVBYTE    ;読みだされたインフォメーションブロックを受信
  F9B6  77            			LD		(HL),A
                      	
  F9B7  23            			INC		HL
  F9B8  05            			DEC		B
  F9B9  20F8          			JR		NZ,MLH5
                      	
  F9BB  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F9BE  A7            			AND		A          ;00以外ならERROR
  F9BF  C262FA        			JP		NZ,MERR
                      	
  F9C2  C35DFA        			JP		MRET       ;正常RETURN
                      	
                      	;**************************** アプリケーション内SD-CARD操作処理 **********************
  F9C5                	MLHCMD:
  F9C5  13            			INC		DE
  F9C6  13            			INC		DE
                      	
  F9C7                	FC0:		
  F9C7  1A            			LD		A,(DE)			;スペース読み飛ばし
  F9C8  FE00          			CP		00H
  F9CA  2809          			JR		Z,FC2
  F9CC  13            			INC		DE
  F9CD  FE20          			CP		20H
  F9CF  2002          			JR		NZ,FC1
  F9D1  18F4          			JR		FC0
  F9D3  1B            	FC1:	DEC		DE
  F9D4  1B            			DEC		DE
  F9D5                	FC2:
                      	
  F9D5  211AFB        			LD		HL,MSG_DNAME         ;行頭に'DOS FILE:'を付けることでカーソルを移動させリターンで実行できるように
  F9D8  010900        			LD		BC,MSG_DNAMEEND-MSG_DNAME
                      	;**** FDLコマンド呼び出し ****
  F9DB  CD8AFA        			CALL	DIRLIST
  F9DE  A7            			AND		A          ;00以外ならERROR
  F9DF  2003          			JR		NZ,SERR
                      	;**** ファイルネーム入力へ復帰 ****
  F9E1  C364F9        			JP		MLH6
                      	
                      	;******* アプリケーション内SD-CARD操作処理用ERROR処理 **************
  F9E4                	SERR:
  F9E4  FEF0          			CP		0F0H
  F9E6  2005          			JR		NZ,SERR3
  F9E8  119DFB        			LD		DE,MSG_F0
  F9EB  180F          			JR		SERRMSG
                      			
  F9ED  FEF1          	SERR3:	CP		0F1H
  F9EF  2005          			JR		NZ,SERR99
  F9F1  11B6FB        			LD		DE,MSG_F1
  F9F4  1806          			JR		SERRMSG
                      			
  F9F6  CD0712        	SERR99:	CALL	ACHXPR
  F9F9  11CFFB        			LD		DE,MSG99
                      			
  F9FC                	SERRMSG:
  F9FC  CD0B00        			CALL	PRINT
  F9FF  CDA704        			CALL	CR1
  FA02  C1            			POP		BC
  FA03  D1            			POP		DE
  FA04  E1            			POP		HL
                      	;**** ファイルネーム入力へ復帰 ****
  FA05  C364F9        			JP		MLH6
                      	
                      	
                      	;**************************** MLDAT リード データ代替処理 ********************
  FA08                	MLDAT:
  FA08  F3            			DI
  FA09  D5            			PUSH	DE
  FA0A  C5            			PUSH	BC
  FA0B  E5            			PUSH	HL
  FA0C  224EFC        			LD		(SADRS),HL
  FA0F  ED434CFC      			LD		(FSIZE),BC
  FA13  3E94          			LD		A,94H      ;DATA LOADコマンド94H
  FA15  CD56FA        			CALL	MCMD       ;コマンドコード送信
  FA18  A7            			AND		A          ;00以外ならERROR
  FA19  C262FA        			JP		NZ,MERR
                      	
  FA1C  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  FA1F  A7            			AND		A          ;00以外ならERROR
  FA20  C262FA        			JP		NZ,MERR
                      	
  FA23  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  FA26  A7            			AND		A          ;00以外ならERROR
  FA27  C262FA        			JP		NZ,MERR
                      	
  FA2A  114CFC        			LD		DE,FSIZE   ;FSIZE送信
  FA2D  1A            			LD		A,(DE)
  FA2E  CDB3F8        			CALL	SNDBYTE
  FA31  13            			INC		DE
  FA32  1A            			LD		A,(DE)
  FA33  CDB3F8        			CALL	SNDBYTE
  FA36  CD42FA        			CALL	DBRCV2      ;FSIZE分のデータを受信し、SADRSから格納。分割ロードの場合、直前に0436HでOPENされたファイルを対象として256バイトずつSADRSが加算されて04F8HがCALLされる。
                      	
  FA39  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  FA3C  A7            			AND		A          ;00以外ならERROR
  FA3D  C262FA        			JP		NZ,MERR
                      	
  FA40  181B          			JR		MRET       ;正常RETURN
                      	
                      	;データ受信2
  FA42  ED5B4CFC      	DBRCV2:	LD		DE,(FSIZE)
  FA46  2A4EFC        			LD		HL,(SADRS)
  FA49  CD81F8        	DBRLP2:	CALL	RCVBYTE
  FA4C  77            			LD		(HL),A
  FA4D  1B            			DEC		DE
  FA4E  7A            			LD		A,D
  FA4F  B3            			OR		E
  FA50  23            			INC		HL
  FA51  20F6          			JR		NZ,DBRLP2   ;DE=0までLOOP
  FA53  C9            			RET
                      	
                      	;************************** VERIFY ベリファイ代替処理 *******************
  FA54  AF            	MVRFY:	XOR		A          ;正常終了フラグ
                      	
  FA55  C9            			RET
                      	
                      	;******* 代替処理用コマンドコード送信 (IN:A コマンドコード) **********
  FA56                	MCMD:
  FA56  CDB3F8        			CALL	SNDBYTE    ;コマンドコード送信
  FA59  CD81F8        			CALL	RCVBYTE    ;状態取得(00H=OK)
  FA5C  C9            			RET
                      	
                      	;****** 代替処理用正常RETURN処理 **********
  FA5D  E1            	MRET:	POP		HL
  FA5E  C1            			POP		BC
  FA5F  D1            			POP		DE
  FA60  AF            			XOR		A          ;正常終了フラグ
                      			
  FA61  C9            			RET
                      	
                      	;******* 代替処理用ERROR処理 **************
  FA62                	MERR:
  FA62  FEF0          			CP		0F0H
  FA64  2005          			JR		NZ,MERR3
  FA66  119DFB        			LD		DE,MSG_F0
  FA69  180F          			JR		MERRMSG
                      			
  FA6B  FEF1          	MERR3:	CP		0F1H
  FA6D  2005          			JR		NZ,MERR99
  FA6F  11B6FB        			LD		DE,MSG_F1
  FA72  1806          			JR		MERRMSG
                      			
  FA74  CD0712        	MERR99:	CALL	ACHXPR
  FA77  11CFFB        			LD		DE,MSG99
                      			
  FA7A                	MERRMSG:
  FA7A  CD0B00        			CALL	PRINT
  FA7D  CDA704        			CALL	CR1
  FA80  E1            			POP		HL
  FA81  C1            			POP		BC
  FA82  D1            			POP		DE
  FA83  3E02          			LD		A,02H
  FA85  37            			SCF
                      	
  FA86  C9            			RET
                      	
  FA87                	DEFDIR:
  FA87  2A4C20        			DB		'*L '
  FA8A                	DEND:
                      	
                      	;**** DIRLIST本体 (HL=行頭に付加する文字列の先頭アドレス BC=行頭に付加する文字列の長さ) ****
                      	;****              戻り値 A=エラーコード ****
  FA8A                	DIRLIST:
  FA8A  3E83          				LD		A,83H      ;DIRLISTコマンド83Hを送信
  FA8C  CDD6FB        				CALL	STCD       ;コマンドコード送信
  FA8F  A7            				AND		A          ;00以外ならERROR
  FA90  C219FB        				JP		NZ,DLRET
                      			
  FA93  C5            				PUSH	BC
  FA94  0621          				LD		B,21H
  FA96  1A            	STLT1:		LD		A,(DE)
  FA97  CD5114        				CALL	TUPPER
  FA9A  CDB3F8        	STLT2:		CALL	SNDBYTE           ;比較文字列を送信
  FA9D  13            				INC		DE
  FA9E  10F6          				DJNZ	STLT1
  FAA0  C1            				POP		BC
  FAA1                	DL1:
  FAA1  E5            				PUSH	HL
  FAA2  C5            				PUSH	BC
  FAA3  1150FC        				LD		DE,BUF
  FAA6  EDB0          				LDIR
  FAA8  EB            				EX		DE,HL
  FAA9  CD81F8        	DL2:		CALL	RCVBYTE           ;'00H'を受信するまでを一行とする
  FAAC  FE00          				CP		00H
  FAAE  280C          				JR		Z,DL3
  FAB0  FEFF          				CP		0FFH              ;'0FFH'を受信したら終了
  FAB2  2816          				JR		Z,DL4
  FAB4  FEFE          				CP		0FEH              ;'0FEH'を受信したら一時停止して一文字入力待ち
  FAB6  2819          				JR		Z,DL5
  FAB8  77            				LD		(HL),A
  FAB9  23            				INC		HL
  FABA  18ED          				JR		DL2
  FABC  77            	DL3:		LD		(HL),A
  FABD  1150FC        				LD		DE,BUF             ;'00H'を受信したら一行分を表示して改行
  FAC0  CD0B00        				CALL	PRINT
  FAC3  CDA304        				CALL	CR2
  FAC6  C1            				POP		BC
  FAC7  E1            				POP		HL
  FAC8  18D7          				JR		DL1
  FACA  CD81F8        	DL4:		CALL	RCVBYTE           ;状態取得(00H=OK)
  FACD  C1            				POP		BC
  FACE  E1            				POP		HL
  FACF  1848          				JR		DLRET
                      	
  FAD1  1140FB        	DL5:		LD		DE,MSG_KEY1        ;HIT ANT KEY表示
  FAD4  CD0B00        				CALL	PRINT
  FAD7  3E1E          				LD		A,01EH
  FAD9  CDC804        				CALL	ACCDIS
  FADC  1155FB        				LD		DE,MSG_KEY2        ;HIT ANT KEY表示
  FADF  CD0B00        				CALL	PRINT
  FAE2  CDA304        				CALL	CR2
  FAE5  3E01          	DL6:		LD		A,01H
  FAE7  CD1B00        				CALL	INKEY$            ;1文字入力待ち
  FAEA  CD5114        				CALL	TUPPER
  FAED  FE00          				CP		00H
  FAEF  28F4          				JR		Z,DL6
  FAF1  FE03          				CP		03H               ;SHIFT+BREAKで打ち切り
  FAF3  281A          				JR		Z,DL7
  FAF5  FE1B          				CP		1BH               ;ESCで打ち切り
  FAF7  2816          				JR		Z,DL7
  FAF9  FE1E          				CP		1EH               ;カーソル↑で打ち切り
  FAFB  2808          				JR		Z,DL9
  FAFD  FE42          				CP		42H               ;「B」で前ページ
  FAFF  2810          				JR		Z,DL8
  FB01  3E00          				LD		A,00H             ;それ以外で継続
  FB03  180C          				JR		DL8
  FB05  3E1E          	DL9:		LD		A,01EH            ;カーソル↑で打ち切ったときにカーソル2行上へ
  FB07  CD1300        				CALL	ACCPRT
  FB0A  3E1E          				LD		A,01EH
  FB0C  CD1300        				CALL	ACCPRT
  FB0F  3EFF          	DL7:		LD		A,0FFH            ;0FFH中断コードを送信
  FB11  CDB3F8        	DL8:		CALL	SNDBYTE
  FB14  CDA304        				CALL	CR2
  FB17  1890          				JR		DL2
                      			
  FB19                	DLRET:		
  FB19  C9            				RET
                      			
  FB1A                	MSG_DNAME:
  FB1A  444F532046494C			DB		'DOS FILE:'
  FB23                	MSG_DNAMEEND:
  FB23  20202020202020			DB		'                            '
  FB3F  00            			DB		00H
                      			
  FB40                	MSG_KEY1:
  FB40  4E4558543A414E				DB		'NEXT:ANY BACK:B BRK:'
  FB54  00            				DB		00H
  FB55                	MSG_KEY2:
  FB55  206F7220455343				DB		' or ESC or SHT+BRK'
  FB67  00            				DB		00H
                      			
  FB68                	MSG_LD:
  FB68  4C4F4144494E47			DB		'LOADING '
  FB70  00            			DB		00H
                      	
  FB71                	WRMSG:
  FB71  5752495445494E			DB		'WRITEING '
  FB7A  00            			DB		00H
                      	
  FB7B                	MSG_FNAME:
  FB7B  46494C45204E41			DB		'FILE NAME FAILED!'
  FB8C  00            			DB		00H
                      			
  FB8D                	MSG_CMD:
  FB8D  434F4D4D414E44			DB		'COMMAND FAILED!'
  FB9C  00            			DB		00H
                      			
  FB9D                	MSG_F0:
  FB9D  53442D43415244			DB		'SD-CARD INITIALIZE ERROR'
  FBB5  00            			DB		00H
                      			
  FBB6                	MSG_F1:
  FBB6  4E4F542046494E			DB		'NOT FIND FILE'
  FBC3  00            			DB		00H
                      			
  FBC4                	MSG_F3:
  FBC4  46494C45204558			DB		'FILE EXIST'
  FBCE  00            			DB		00H
                      			
  FBCF                	MSG99:
  FBCF  204552524F52  			DB		' ERROR'
  FBD5  00            			DB		00H
                      			
                      	;**** コマンド送信 (IN:A コマンドコード)****
  FBD6  CDB3F8        	STCD:		CALL	SNDBYTE    ;Aレジスタのコマンドコードを送信
  FBD9  CD81F8        				CALL	RCVBYTE    ;状態取得(00H=OK)
  FBDC  C9            				RET
                      	
                      	;**** コマンド、ファイル名送信 (IN:A コマンドコード HL:ファイルネームの先頭)****
  FBDD  CDF1FB        	STCMD:		CALL	STFN       ;ファイルネーム取得
  FBE0  E5            				PUSH	HL
  FBE1  CDD6FB        				CALL	STCD       ;コマンドコード送信
  FBE4  E1            				POP		HL
  FBE5  A7            				AND		A          ;00以外ならERROR
  FBE6  C218FC        				JP		NZ,SVER0
  FBE9  CD00FC        				CALL	STFS       ;ファイルネーム送信
  FBEC  A7            				AND		A          ;00以外ならERROR
  FBED  C218FC        				JP		NZ,SVER0
  FBF0  C9            				RET
                      	
                      	;****** FILE NAME 取得 (IN:DE コマンド文字の次の文字 OUT:HL ファイルネームの先頭)*********
  FBF1  F5            	STFN:		PUSH	AF
  FBF2  13            	STFN1:		INC		DE         ;ファイルネームまでスペース読み飛ばし
  FBF3  1A            				LD		A,(DE)
  FBF4  FE20          				CP		20H
  FBF6  28FA          				JR		Z,STFN1
  FBF8  FE30          				CP		30H        ;「0」以上の文字でなければエラーとする
  FBFA  DA13FC        				JP		C,STSV2
  FBFD  EB            				EX		DE,HL
  FBFE  F1            				POP		AF
  FBFF  C9            				RET
                      	
                      	;**** ファイルネーム送信(IN:HL ファイルネームの先頭) ******
  FC00  0620          	STFS:		LD		B,20H
  FC02  7E            	STFS1:		LD		A,(HL)     ;FNAME送信
  FC03  CDB3F8        				CALL	SNDBYTE
  FC06  23            				INC		HL
  FC07  05            				DEC		B
  FC08  20F8          				JR		NZ,STFS1
  FC0A  3E0D          				LD		A,0DH
  FC0C  CDB3F8        				CALL	SNDBYTE
  FC0F  CD81F8        				CALL	RCVBYTE    ;状態取得(00H=OK)
  FC12  C9            				RET
                      	
  FC13                	STSV2:                      ;ファイルネームの取得に失敗
  FC13  117BFB        				LD		DE,MSG_FNAME
  FC16  182B          				JR		ERRMSG
  FC18                	SVER0:
  FC18  D1            				POP		DE         ;CALL元STACKを破棄する
  FC19                	SVERR:
  FC19  FEF0          				CP		0F0H
  FC1B  2005          				JR		NZ,ERR3
  FC1D  119DFB        				LD		DE,MSG_F0  ;SD-CARD INITIALIZE ERROR
  FC20  1821          				JR		ERRMSG
  FC22  FEF1          	ERR3:		CP		0F1H
  FC24  2005          				JR		NZ,ERR4
  FC26  11B6FB        				LD		DE,MSG_F1  ;NOT FIND FILE
  FC29  1818          				JR		ERRMSG
  FC2B  FEF3          	ERR4:		CP		0F3H
  FC2D  2005          				JR		NZ,ERR5
  FC2F  11C4FB        				LD		DE,MSG_F3  ;FILE EXIST
  FC32  180F          				JR		ERRMSG
  FC34  FEF4          	ERR5:		CP		0F4H
  FC36  2005          				JR		NZ,ERR99
  FC38  118DFB        				LD		DE,MSG_CMD
  FC3B  1806          				JR		ERRMSG
  FC3D  CD0712        	ERR99:		CALL	ACHXPR
  FC40  11CFFB        				LD		DE,MSG99   ;その他ERROR
  FC43  CD0B00        	ERRMSG:		CALL	PRINT
  FC46  CDA304        				CALL	CR2
  FC49  C9            	MON:		RET
                      	
  FC4A                	ENT6:
                      	
                      	
  FC4A                	FCB			DS		2
  FC4C                	FSIZE		DS		2
  FC4E                	SADRS		DS		2
  FC50                	BUF:		DS		80
                      	
  FCA0                				END
